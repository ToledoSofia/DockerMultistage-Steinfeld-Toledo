FROM node:latest AS builder

COPY estilos.css /app/estilos.css
COPY script.js /app/script.js

RUN npm install npm install uglify-js -g
RUN npm install -g uglifycss

RUN uglifycss /app/estilos.css > /app/estilos.min.css
RUN uglifyjs /app/script.js -o /app/script.min.js

FROM nginx:latest

COPY --from=builder /app/estilos.min.css /usr/share/nginx/html/estilos.css
COPY --from=builder /app/script.min.js /usr/share/nginx/html/script.js
COPY index.html /usr/share/nginx/html/index.html
COPY default.conf /etc/nginx/conf.d/default.conf
EXPOSE 80

CMD ["nginx", "-g", "daemon off;"]



default.conf:
server {
    listen 80 default_server;
    listen [::]:80 default_server;

    root /usr/share/nginx/html/;

    index index.html index.htm index.nginx-debian.html ;

    server_name _;

    location / {
        try_files $uri $uri/ =404;
    }
}



1- instalar nginx:
sudo apt update
sudo apt install nginx
sudo systemctl 	start nginx
sudo systemctl enable nginx

2_ crear pagina estatica con html, css, js
/dockerMulti
index.html, estilos.css, script.js

3_ Dockerfile:

copia los archivos css y js dentro del directorio de docker /app
instala uglifycss y js
uglifica los archivos 
crea el otro docker from builder para nginx
copia los archivos ya uglificados dentro de la carpeta /usr/share/nginx/html o algo asi, tmb copia el index.html y reemplaza el
default.conf por el que teniamos en nuestro dir.

4- crear y ejecutar imagen
sudo docker build -t imagendocker .
sudo docker run -p 3000:80 imagendocker

5- comprobar:
si entras a localhost:3000 aparece la pagina estilizada con css y funcionando con el codigo js. desde inspeccionar se ve el css 
uglyficado pero el js creo que se prettyfica solo ni idea.

